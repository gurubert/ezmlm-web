# Configuration file for ezmlm-web 3.2
# ===========================================================================

# This file is not just an ordinary configuration file - it contains valid
# perl statements that are executed just like any other perl script. When
# editing this file, be careful that it is still valid perl when you have
# finished (perl -w ezmlmwebrc ;-)
# 
# See the manpage of ezmlmwebrc(5) for a list of all available configuration
# settings.

# ---------------------------------------------------------------------------

# Where do we store lists on this server ... Try "$HOME_DIR/lists". 
# This directory will automatically be created if needed.
# BEWARE: the (resulting) path MUST be absolute (starting with a slash)!
$LIST_DIR = "$HOME_DIR/lists";

# Multi-Domain-Support
# This is a quite advanced setting for special installations.
# Most people should just ignore it.
# Anyway - if you want to control more than one directory containing
# different lists, then you should:
#  1) copy examples/multidomain.conf.dist to /etc/ezmlm-web/multidomain.conf
#  2) adjust /etc/ezmlm-web/multidomain.conf to your setup
#  3) uncomment the following line
#  4) make sure that your multi domain settings are not overriden by settings below
#warn "multidomain.conf failed" unless (defined do "/etc/ezmlm-web/multidomain.conf");

# Where do we store the dotqmail files of this user?
# (defaults to the home directory of the executing user)
# You will have to change this value, if you use a multi domain
# vpopmail setup. Otherwise just leave the setting turned off.
# BEWARE: the (resulting) path MUST be absolute (starting with a slash)!
#$DOTQMAIL_DIR = "/home/vpopmail/domain";

# Where is the webusers file for access-permissions
# defaults to "$LIST_DIR/webusers"
#$WEBUSERS_FILE = "$LIST_DIR/webusers";

# Where are the language files
# usually something like /usr/local/share/ezmlm-web/lang
$LANGUAGE_DIR = "/usr/local/share/ezmlm-web/lang";

# Where are the template files
# usually something like /usr/local/share/ezmlm-web/template
$TEMPLATE_DIR = "/usr/local/share/ezmlm-web/template";

# Safe list deletion? 
# 0 = move List to $LIST_DIR/_deleted_lists -> recoverable :)
# 1 = allow user to delete list completely. No backup, therefore no recovery.
$UNSAFE_RM = 0;

# Who is the qmail alias user on this system (usually alias ;)
$ALIAS_USER = "alias";

# Where do the qmail control files live on this system ...
# defaults to /var/qmail/control
$QMAIL_BASE = $Mail::Ezmlm::QMAIL_BASE . '/control';

# default mailing list domain name (optional)
#$MAIL_DOMAIN = "lists.someserver.org";

# default prefix of the local part of the addresses of mailing lists
# useful for some qmail-ldap setups
#$MAIL_ADDRESS_PREFIX = "lists-";

# Do we want to allow ``pretty'' names - ie more human readable ones
# This will slow ezmlm-web down a bit for large lists
$PRETTY_NAMES = 1;

# Do we want to allow the users to be allowed to upload a file containing
# lists of email addresses to subscribe?
$FILE_UPLOAD = 1;

# What switches to we want ezmlm-web to have on as default. The ezmlm-make
# defaults are aBDFGHIJKLMNOpQRSTUWX (small means enabled, CAPITALS mean
# disabled). The defaults below should be reasonable - I use them ;)
$DEFAULT_OPTIONS = "aBDFGHiJkLMNOpQRSTUWx";

# What is the title of this document?
$HTML_TITLE = "ezmlm-web - a mailinglist administration interface";

# Optional: some permanent links (visible in the top right corner)
#@HTML_LINKS = (
#	{ name	=> 'ezmlm-web homepage',
#		url	=> 'https://systemausfall.org/toolforge/ezmlm-web' },
#	{ name	=> 'domain\'s root',
#		url	=> '/'},
#	);

# use a cascading style sheet (css)
# the setting is interpreted as a URL
# this setting was formerly known as "HTML_CSS_FILE"
$HTML_CSS_COMMON = "/ezmlm-web/default.css";

# choose a coloring scheme - the available files are:
#    color-blue-gray:   default style used before v3.2
#    color-red-blue:    use gradients instead of plain colors (since v3.2)
#    
# be aware, that some stylesheets may require additional graphic
# files in the same directory
$HTML_CSS_COLOR = "/ezmlm-web/color-red-blue.css";

# the default interface language
# all other available translation are available via the web interface
# the configured preferred browser language of a user can override this
# setting individually
$HTML_LANGUAGE = "en";

